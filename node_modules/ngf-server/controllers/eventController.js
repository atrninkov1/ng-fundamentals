var events = require('../database/events'),
  getNextId = require('./getNextId'),
  url = require('url');

var nextId = getNextId(events);

exports.getEvents = function(req, res) {
  var sql = require("mssql")
    var config = {
        user: 'sa',
        password: '123456789',
        server: 'localhost\\MSSQLSERVER01', 
        database: 'EventsDatabase',
        port: 1433,
        options: {
          trustedConnection: true
        }
    }
    
    sql.connect(config, function (err) {
    
        if (err) console.log(err)

        var Events = []

        // create Request object
        var request = new sql.Request()
           
        // query to the database and get the records         
          request.query('SELECT e.Id AS Id, Name, Date, Time, Price, ImageUrl, OnlineUrl, Address, City, Country FROM Events e LEFT OUTER JOIN Locations l ON e.LocationId = l.Id',
          function(err, recordset){

            if (err) console.log(err)
            Events = recordset.recordset
          })

          for (let index = 0; index < Events.length; index++) {
            request.query(`SELECT s.Id, Name, Presenter, Duration, Level, Abstract FROM Sessions s WHERE s.EventId = ${Events[index].Id}`,
            function(err, recordset){
              
            if (err) console.log(err)

            Events.sessions = recordset.recordset
            })

            console.log(Events)
            
          }
      })
      res.send(events);
    }

exports.getEvent = function(req, res) {
  var event = events.find(event => event.id === +req.params.eventId);
  res.send(event);
}

exports.searchSessions = function(req, res) {
	var term = req.query.search.toLowerCase();
  var results = [];
  events.forEach(event => {
    var matchingSessions = event.sessions.filter(session => session.name.toLowerCase().indexOf(term) > -1)
    matchingSessions = matchingSessions.map(session => {
      session.eventId = event.id;
      return session;
    })
    results = results.concat(matchingSessions);
  })
  res.send(results);
}

exports.deleteVoter = function(req, res) {
  var voterId = req.params.voterId,
      sessionId = parseInt(req.params.sessionId),
      eventId = parseInt(req.params.eventId);

  var session = events.find(event => event.id === eventId)
    .sessions.find(session => session.id === sessionId)
    
  session.voters = session.voters.filter(voter => voter !== voterId);
  res.send(session);
}

exports.addVoter = function(req, res) {
  var voterId = req.params.voterId,
      sessionId = parseInt(req.params.sessionId),
      eventId = parseInt(req.params.eventId);

  var event = events.find(event => event.id === eventId)
  var session = event.sessions.find(session => session.id === sessionId)
    
  session.voters.push(voterId);
  res.send(session);
}

exports.saveEvent = function(req, res) {
  var event = req.body;
  
  if (event.id) {
    var index = events.findIndex(e => e.id === event.id)
    events[index] = event
  } else {
    event.id = nextId;
    nextId++;
    event.sessions = [];
    events.push(event);
  }
  res.send(event);
  res.end(); 
}

exports.getLocations = function(req, res) {
  var sql = require("mssql")
    var config = {
        user: 'sa',
        password: '123456789',
        server: 'localhost\\MSSQLSERVER01', 
        database: 'EventsDatabase',
        port: 1433,
        options: {
          trustedConnection: true
        }
    }
    sql.connect(config, function (err) {
    
        if (err) console.log(err)

        // create Request object
        var request = new sql.Request()
           
        // query to the database and get the records
        request.query('select * from Locations', function (err, recordset) {
            
            if (err) console.log(err)

            // send records as a response
            res.send(recordset)
            sql.close()          
        })
    })
}